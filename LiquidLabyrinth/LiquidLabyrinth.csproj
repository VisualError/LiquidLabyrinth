<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <AssemblyName>com.github.visualerror.liquid_labyrinth</AssemblyName>
    <Product>Liquid Labyrinth</Product>
    <Description>Crazy potions and the like!</Description>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <MinVerDefaultPreReleaseIdentifiers>dev</MinVerDefaultPreReleaseIdentifiers>
    <MinVerTagPrefix>v</MinVerTagPrefix>
  </PropertyGroup>

  <PropertyGroup>
    <OutputPath>./bin</OutputPath>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <PackageIcon>icon.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <!-- make all references non-private, so they won't be copied to the output folder -->
  <Target Name="ClearReferenceCopyLocalPaths" AfterTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" />
    </ItemGroup>
  </Target>

  <ItemGroup>
    <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.1" PrivateAssets="all" />
    <PackageReference Include="BepInEx.Analyzers" Version="1.0.8" PrivateAssets="all" />
    <PackageReference Include="BepInEx.Core" Version="5.4.21" />
    <PackageReference Include="BepInEx.PluginInfoProps" Version="2.1.0" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies.net472" Version="1.0.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="UnityEngine.Modules" Version="2022.3.9" />
  </ItemGroup>

  <ItemGroup Condition="$(CI) != 'true'">
    <Reference Include="Assembly-CSharp" Publicize="true">
      <HintPath>$(LETHAL_COMPANY_DIR)/Lethal Company_Data/Managed/Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp-firstpass" Publicize="true">
      <HintPath>$(LETHAL_COMPANY_DIR)/Lethal Company_Data/Managed/Assembly-CSharp-firstpass.dll</HintPath>
    </Reference>
    <Reference Include="Unity.Netcode.Runtime">
      <HintPath>$(LETHAL_COMPANY_DIR)/Lethal Company_Data/Managed/Unity.Netcode.Runtime.dll</HintPath>
    </Reference>
    <Reference Include="Unity.Collections">
      <HintPath>$(LETHAL_COMPANY_DIR)/Lethal Company_Data/Managed/Unity.Collections.dll</HintPath>
    </Reference>
    <Reference Include="LethalSettings">
      <HintPath>$(TEST_PROFILE_DIR)/BepInEx/plugins/willis81808-LethalSettings/LethalSettings.dll</HintPath>
    </Reference>
    <Reference Include="LethalLib">
      <HintPath>$(TEST_PROFILE_DIR)/BepInEx/plugins/Evaisa-LethalLib/LethalLib/LethalLib.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup Condition="$(CI) == 'true'">
    <PackageReference Include="LethalCompany.GameLibs.Steam" Version="45.0.2-alpha.1" />
    <Reference Include="LethalSettings">
      <HintPath>$(SolutionDir)lib/willis81808-LethalSettings/LethalSettings.dll</HintPath>
    </Reference>
    <Reference Include="LethalLib">
      <HintPath>$(SolutionDir)lib/Evaisa-LethalLib/plugins/LethalLib/LethalLib.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\..\..\Downloads\icon.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Unity.Netcode.Components">
      <HintPath>D:\SteamLibrary\steamapps\common\Lethal Company\Lethal Company_Data\Managed\Unity.Netcode.Components.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Labyrinth\LiquidAPI_Patches\" />
    <Folder Include="Resources\" />
  </ItemGroup>
  
  <Target Name="EnsureLibDir">
    <MakeDir Directories="../lib" Condition="!Exists('../lib')" />
  </Target>
  
  <Target Name="FetchLethalSettings" DependsOnTargets="EnsureLibDir">
    <Exec Command="wget https://thunderstore.io/package/download/willis81808/LethalSettings/1.3.0/ -O ../lib/willis81808-LethalSettings.zip" />
    <Exec Command="unzip -o ../lib/willis81808-LethalSettings.zip LethalSettings.dll -d ../lib/willis81808-LethalSettings" />
  </Target>

  <Target Name="FetchLethalLib" DependsOnTargets="EnsureLibDir">
    <Message Importance="high" Text="@(ReferencePathWithRefAssemblies)" />
    <Exec Command="wget https://thunderstore.io/package/download/Evaisa/LethalLib/0.10.1/ -O ../lib/Evaisa-LethalLib.zip" />
    <Exec Command="unzip -o ../lib/Evaisa-LethalLib.zip plugins/LethalLib/LethalLib.dll -d ../lib/Evaisa-LethalLib" />
  </Target>
  
  <Target Name="FetchDependencies">
    <CallTarget Targets="FetchLethalSettings;FetchLethalLib" />
  </Target>

  <Target Name="SetPluginVersion" BeforeTargets="AddGeneratedFile" DependsOnTargets="MinVer">
    <PropertyGroup>
      <BepInExPluginVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</BepInExPluginVersion>
    </PropertyGroup>
  </Target>

  <Target Name="NetcodePatch" AfterTargets="PostBuildEvent">
    <Message Importance="high" Text="Running NetcodePatcher..." />
    <CallTarget Condition="$(OS) == 'Windows_NT'" Targets="NetcodePatchWindows" />
    <CallTarget Condition="$(OS) != 'Windows_NT'" Targets="NetcodePatchUnix" />
    <Message Importance="high" Text="NetcodePatcher process completed." />
  </Target>

  <Target Name="NetcodePatchWindows">
    <Exec Command="cd /d $(NETCODE_PATCHER_DIR)&#xD;&#xA;NetcodePatcher.dll $(TargetDir) deps/" />
  </Target>

  <Target Name="NetcodePatchUnix">
    <Exec Command="cd $(NETCODE_PATCHER_DIR)&#xD;&#xA;dotnet NetcodePatcher.dll $(TargetDir) deps/" />
  </Target>

  <Target Name="PackThunderstore" DependsOnTargets="NetcodePatch" AfterTargets="Publish">
    <Warning Code="LC001" Text="Plugin was not built in Release mode, users may experience an impact to performance!" Condition=" '$(Configuration)' != 'Release' " />
    <PropertyGroup>
      <PlainVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</PlainVersion>
    </PropertyGroup>
    <Exec Command="dotnet tcli build --config-path $(SolutionDir)assets/thunderstore.toml --package-version $(PlainVersion)" />
    <ItemGroup>
      <FilesToRename Include="$(SolutionDir)dist/*-$(PlainVersion).zip" />
    </ItemGroup>
    <Move SourceFiles="@(FilesToRename)" DestinationFiles="@(FilesToRename -&gt; Replace($(PlainVersion), $(MinVerVersion)))" />
  </Target>
</Project>